import os
import psycopg2
from psycopg2.extras import RealDictCursor
from dotenv import load_dotenv

# Carrega as vari√°veis do arquivo .env
load_dotenv()

class DatabaseConnection:
    """
    Classe para gerenciar a conex√£o com o banco PostgreSQL
    """
    
    def __init__(self):
        """
        Inicializa a conex√£o com o banco usando as vari√°veis de ambiente
        """
        self.host = os.getenv('DB_HOST')
        self.port = os.getenv('DB_PORT')
        self.database = os.getenv('DB_NAME')
        self.user = os.getenv('DB_USER')
        self.password = os.getenv('DB_PASSWORD')
        self.schema = os.getenv('DB_SCHEMA', 'public')  # Schema padr√£o √© 'public'
        self.connection = None
    
    def conectar(self):
        """
        Estabelece conex√£o com o banco de dados
        """
        try:
            self.connection = psycopg2.connect(
                host=self.host,
                port=self.port,
                database=self.database,
                user=self.user,
                password=self.password,
                cursor_factory=RealDictCursor,  # Retorna resultados como dicion√°rio
                options=f"-c search_path={self.schema}"  # Define o schema
            )
            print("‚úÖ Conex√£o estabelecida com sucesso!")
            return True
        except psycopg2.Error as erro:
            print(f"‚ùå Erro ao conectar com o banco: {erro}")
            return False
    
    def desconectar(self):
        """
        Fecha a conex√£o com o banco de dados
        """
        if self.connection:
            self.connection.close()
            print("üîå Conex√£o fechada.")
    
    def testar_conexao(self):
        """
        Testa se a conex√£o est√° funcionando
        """
        if not self.connection:
            print("‚ùå N√£o h√° conex√£o ativa.")
            return False
        
        try:
            cursor = self.connection.cursor()
            cursor.execute("SELECT version();")
            versao = cursor.fetchone()
            print(f"üêò PostgreSQL vers√£o: {versao['version']}")
            cursor.close()
            return True
        except psycopg2.Error as erro:
            print(f"‚ùå Erro ao testar conex√£o: {erro}")
            return False

# Exemplo de uso
if __name__ == "__main__":
    # Cria uma inst√¢ncia da conex√£o
    db = DatabaseConnection()
    
    # Tenta conectar
    if db.conectar():
        # Testa a conex√£o
        db.testar_conexao()
        
        # Fecha a conex√£o
        db.desconectar()
    else:
        print("N√£o foi poss√≠vel estabelecer conex√£o com o banco.")